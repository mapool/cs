/**
 * @file Button
 * @author musicode
 */

button-reset()

    a&
        ui-set('color', $brand-text)
        text-decoration none

    button&
        background-color transparent
        outline 0

button-size(size)
    ui-set('font-size', size['font'])
    ui-set('line-height', size['line-height'])
    ui-set('padding', size['padding-vertical'] size['padding-horizontal'])

button-brand(bg, border, color)
    ui-set('background-color', bg)
    ui-set('border-color', border)
    ui-set('color', color)

button-hover(bg, border, color = null)
    ui-set('background-color', bg)
    ui-set('border-color', border)
    if color is a 'rgba'
        ui-set('color', color)

button-active(bg, border, color = null)
    ui-set('background-color', bg)
    ui-set('border-color', border)
    ui-set('box-shadow', $button-box-shadow-active)
    if color is a 'rgba'
        ui-set('color', color)

button-disabled(bg, border, color)
    ui-set('background-color', bg, true)
    ui-set('border-color', border, true)
    ui-set('color', color, true)
    box-shadow none !important

ui-button()

    border 1px solid transparent
    display inline-block
    text-align center
    white-space nowrap
    user-select none

    button-reset()

    if $support-mouse
        ui-set('cursor', $cursor-clickable)
        ui-disabled-cursor()

    {$selector-hover}
        ui-transition('background-color, border-color, color')
        ui-set('color', $brand-text-hover)

    {$selector-disabled}
        ui-set('color', $brand-text-disabled, true)

    ui()

    ui-brand-variant(
        reversed: true,
        each: @(bg, color, name) {
            button-brand(
                bg: bg,
                border: darken(bg, $button-border-darken),
                color: color
            )
            {$selector-hover} {
                bg-hover = $brand-hover-hash[name]
                button-hover(
                    bg: bg-hover,
                    border: darken(bg-hover, $button-border-darken),
                    color: color
                )
            }
            {$selector-active} {
                bg-active = $brand-active-hash[name]
                button-active(
                    bg: bg-active,
                    border: darken(bg-active, $button-border-darken),
                    color: color
                )
            }
            {$selector-disabled} {
                bg-disabled = $brand-disabled-hash[name]
                button-disabled(
                    bg: bg-disabled,
                    border: darken(bg-disabled, $button-border-darken),
                    color: color
                )
            }
        }
    )

    ui-size-variant(
        each: @(size) {

            button-size(size)

            &{$selector-round} {
                ui-set('border-radius', size['round'])
            }
            &{$selector-radius} {
                ui-set('border-radius', size['radius'])
            }

        }
    )

    > {$selector-text}
        font inherit

    > {$selector-icon} + {$selector-text},
    > {$selector-text} + {$selector-icon} {
        ui-set('margin-left', $button-icon-gap)
    }


ui-button-outline()

    ui-brand-variant(
        each: @(color, name) {
            button-brand(transparent, color, color)

            {$selector-hover} {
                color-hover = $brand-hover-hash[name]
                button-hover(
                    bg: transparent,
                    border: color-hover,
                    color: color-hover
                )
            }
            {$selector-active} {
                color-active = $brand-active-hash[name]
                button-active(
                    bg: transparent,
                    border: color-active,
                    color: color-active
                )
            }
            {$selector-disabled} {
                color-disabled = $brand-disabled-hash[name]
                button-disabled(
                    bg: transparent,
                    border: color-disabled,
                    color: color-disabled
                )
            }
        }
    )


ui-buttons()

    ui-collection(
        selector-item: $selector-button,
        each: @(size) {

            > {$selector-button} {
                button-size(size)
            }

            &{$selector-round} {
                > {$selector-button} {
                    ui-set('border-radius', size['round'])
                }
            }

            &{$selector-radius} {
                > {$selector-button} {
                    ui-set('border-radius', size['radius'])
                }
            }

        }
    )


ui-buttons-tight()

    ui-collection-tight(
        selector-item: $selector-button,
        gap-item: -1px
    )

    ui-collection-tight-side-radius(
        selector-item: $selector-button
    )


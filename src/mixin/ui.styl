
ui()

    if (@display == 'inline-block' or @display == 'inline') && !@vertical-align
        vertical-align baseline


ui-set(name, value, important = false)

    apply = @() {
        if (important) {
            {name} value !important
        }
        else {
            {name} value
        }
    }

    if value is a 'unit'
        if name == 'opacity' or value > 0
            apply()

    else if value is not a 'null'
        apply()



ui-opacity(value)

    ui-set('opacity', value)

    if $support-ie8 and value is a 'unit'
        filter unquote('alpha(opacity=' + 100 * value + ')')


ui-fluid()

    display block
    width 100%


ui-justified(selector-item)

    display table

    > {selector-item}
        display table-cell
        width 1%



ui-collection(selector-item = '', each = null)

    display block
    font-size 0

    ui-size-variant(
        each: @(size, name) {

            > {selector-item} {
                + {selector-item} {
                    ui-set('margin-left', size['margin-horizontal'])
                    &{$selector-fluid} {
                        margin-left 0
                        ui-set('margin-top', size['margin-vertical'])
                    }
                }
            }

            ui-apply(
                style: @() {
                    each(size, name)
                }
            )

        }
    )


ui-collection-tight(selector-item, gap-item = 0)

    > {selector-item}
        + {selector-item}
            margin-left gap-item
            &{$selector-fluid}
                if gap-item > 0
                    margin-top 0
                margin-top gap-item

    if $support-mouse and gap-item < 0
        > {selector-item}
            {$selector-hover}
                position relative
                z-index 1


ui-transition(property)

    if $transition-duration is a 'unit'
        transition property $transition-duration


ui-apply(style, selector = '')

    if selector
        {selector}
            style()
    else
        style()


ui-status(
        bg = null, bg-offset = null,
        border = null, border-offset = null,
        color = null, color-offset = null,
        selector = '',
        important = false,
        extra = null)

    offset = @(color, offset) {

        if (color is a 'rgba' and offset is a 'unit') {
            if (offset > 0) {
                color = darken(color, offset)
            }
            else if (offset < 0) {
                color = lighten(color, -1 * offset)
            }
        }

        return color
    }

    ui-apply(
        selector: selector,
        style: @() {

            ui-set('background-color', offset(bg, bg-offset), important)
            ui-set('border-color', offset(border, border-offset), important)
            ui-set('color', offset(color, color-offset), important)

            if (extra is a 'function') {
                extra()
            }
        }
    )


ui-hover(bg = null, border = null, color = null, selector = $selector-hover)

    ui-status(bg, 5%, border, 6%, color, 2%, selector)


ui-active(bg = null, border = null, color = null, selector = $selector-active)

    ui-status(bg, 15%, border, 14%, color, 3%, selector)


ui-focus(bg = null, border = null, color = null, selector = $selector-focus)

    ui-active(bg, border, color, selector)


ui-checked(bg = null, border = null, color = null, selector = $selector-checked)

    ui-active(bg, border, color, selector)


ui-disabled(bg = null, border = null, color = null, selector = $selector-disabled)

    ui-status(bg, -35%, border, -30%, color, -60%, selector, true, @() {

        &,
        & > i {
            ui-set('cursor', $cursor-disabled)
        }

    })





ui-variant(hash, each)

    for name in hash

        selector = '&'

        if name
            selector += '.' + name

        ui-apply(
            selector: selector,
            style: @() {
                each(hash[name], name)
            }
        )



ui-brand-variant(
                each,
                reversed = false,
                brand-hash = $brand-hash)

    ui-variant(
        hash: brand-hash,
        each: @(color) {

            bg = null
            border = color

            if (reversed) {
                bg = color
                color = #FFF
                border = darken(bg, 20%)
            }

            each(
                bg: bg,
                color: color,
                border: border
            )

        }
    )




ui-size-variant(
                each,
                size-hash = $size-hash)

    ui-variant(
        hash: size-hash,
        each: @(item, name) {
            each(item, name)
        }
    )

